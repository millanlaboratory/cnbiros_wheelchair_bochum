<?xml version="1.0"?>
<launch>

<!-- ************************************************************** -->
<!--						Arguments								-->
<!-- ************************************************************** -->

	<!-- Running options -->
	<arg name="autostart"			default="False" />
	<arg name="enable_bci"			default="False" />
	<arg name="visualization"		default="False" />
	<arg name="on_place"			default="False" />
	<arg name="enable_repellors"	default="True" />
	<arg name="enable_attractors"	default="True" />
	<arg name="enable_encoders"		default="False" />	<!-- Until encoders are not mounted -->
	<arg name="enable_rgb_odometry"	default="True" />	<!-- To be modified when encoder are mounted -->

	<!-- Wheelchair parameters -->
	<arg name="wheelchair_description"	default="$(find cnbiros_wheelchair_description)/urdf/wheelchair.urdf.xacro" />
	<arg name="params_wheelchair"		default="$(find cnbiros_wheelchair_bochum)/params/params_wheelchair.yaml" />

	<!-- Navigation parameters -->
	<arg name="params_local_planner_type"		 default="eband_local_planner/EBandPlannerROS" />
	<arg name="params_global_planner_type"		 default="global_planner/GlobalPlanner" />
	<arg name="params_navigation_common" default="$(find cnbiros_wheelchair_bochum)/params/params_navigation_common.yaml" />
	<arg name="params_navigation"		 default="$(find cnbiros_wheelchair_bochum)/params/params_navigation.yaml" />
	<arg name="params_mapserver"		 default="$(find cnbiros_wheelchair_bochum)/params/params_mapserver.yaml" />
	<arg name="params_sharedactions"	 default="$(find cnbiros_wheelchair_bochum)/params/params_shared_actions.yaml" />

	<!-- BCI control parameters -->
	<arg name="params_bci_interfaces"	default="$(find cnbiros_wheelchair_bochum)/params/params_bci_interfaces.yaml" />
	
<!-- ************************************************************** -->
<!--						BCI	Interfaces							-->
<!-- ************************************************************** -->

	<group if="$(arg enable_bci)">

		<!-- BCI interfaces parameters -->
		<rosparam subst_value="True" file="$(arg params_bci_interfaces)" command="load" />
		
		<!-- TiD interface -->
		<node pkg="cnbiros_bci" type="rostid" name="rostid" output="screen" />
		
		<!-- TiD converter -->
		<node pkg="cnbiros_bci" type="tid_to_point" output="screen" name="tid_to_point" />
	</group>

<!-- ************************************************************** -->
<!--					RVIZ visualization							-->
<!-- ************************************************************** -->
	
	<group if="$(arg visualization)">
		<node name="rviz" pkg="rviz" type="rviz" args="-d $(find cnbiros_wheelchair_description)/launch/wheelchair_footprint.rviz"/>
	</group>

<!-- ************************************************************** -->
<!--						Wheelchair								-->
<!-- ************************************************************** -->

	<!-- Wheelchair parameter load -->
	<rosparam subst_value="True" file="$(arg params_wheelchair)" command="load" />

	<!-- Wheelchair description -->
	<param name="robot_description" command="$(find xacro)/xacro --inorder $(arg wheelchair_description)" />

	<!-- Transformations -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />
	<node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" />

<!-- ************************************************************** -->
<!--						Navigation								-->
<!-- ************************************************************** -->

	<!-- Move base -->
	<node name="map_server" pkg="map_server" type="map_server" args="$(arg params_mapserver)" />
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
		<rosparam subst_value="True" param="base_local_planner">$(arg params_local_planner_type)</rosparam>
		<rosparam subst_value="True" param="base_global_planner">$(arg params_global_planner_type)</rosparam>
		<rosparam subst_value="True" file="$(arg params_navigation_common)" command="load" ns="global_costmap" />	
		<rosparam subst_value="True" file="$(arg params_navigation_common)" command="load" ns="local_costmap" />	
		<rosparam subst_value="True" file="$(arg params_navigation)" command="load" />
	</node>

	<!-- Shared actions parameters load -->
	<rosparam subst_value="True" file="$(arg params_sharedactions)" command="load" />

	<!-- Proximity sector converters -->
	<node pkg="cnbiros_shared_navigation" type="costmap_to_proximitysector" output="screen" name="costmap_to_proximitysector" />
	<node pkg="cnbiros_shared_navigation" type="point_to_proximitysector" output="screen" name="point_to_proximitysector" />

	<!-- Shared actions -->
	<node pkg="cnbiros_shared_navigation" type="shared_actions" output="screen" name="shared_actions" >
	  <rosparam param="autostart" subst_value="True">$(arg autostart)</rosparam>
	  <rosparam param="on_place" subst_value="True">$(arg on_place)</rosparam>
	  <rosparam param="enable_repellors" subst_value="True">$(arg enable_repellors)</rosparam>
	  <rosparam param="enable_attractors" subst_value="True">$(arg enable_attractors)</rosparam>
	</node>

</launch>
